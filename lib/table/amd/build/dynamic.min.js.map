{"version":3,"sources":["../src/dynamic.js"],"names":["watching","checkTableIsDynamic","tableRoot","Error","matches","Selectors","main","region","getFiltersetFromTable","JSON","parse","dataset","tableFilters","refreshTableContent","resetContent","filterset","tableComponent","tableHandler","tableUniqueid","sortData","tableSortData","joinType","jointype","filters","firstinitial","tableFirstInitial","lastinitial","tableLastInitial","pageNumber","tablePageNumber","pageSize","tablePageSize","hiddenColumns","tableHiddenColumns","then","data","placeholder","document","createElement","innerHTML","html","replaceWith","childNodes","getTableFromId","dispatchEvent","CustomEvent","Events","tableContentRefreshed","bubbles","updateTable","sortBy","sortOrder","firstInitial","lastInitial","refreshContent","unshift","sortby","sortorder","parseInt","stringify","Promise","resolve","getTableData","setFilters","getFilters","setSortOrder","setPageNumber","getPageNumber","setPageSize","getPageSize","setFirstInitial","getFirstInitial","setLastInitial","getLastInitial","hideColumn","columnToHide","push","showColumn","columnToShow","filter","columnName","resetTablePreferences","init","addEventListener","e","target","closest","sortableLink","table","links","sortableColumn","preventDefault","firstInitialLink","initialsBar","initial","lastInitialLink","pageItem","paginationBar","hide","column","show","resetTablePreferencesLink","tableRegionId","querySelector","fromRegionId"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to handle dynamic table features.\n *\n * @module     core_table/dynamic\n * @package    core_table\n * @copyright  2020 Simey Lameze <simey@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {fetch as fetchTableData} from 'core_table/local/dynamic/repository';\nimport * as Selectors from 'core_table/local/dynamic/selectors';\nimport Events from './local/dynamic/events';\nimport {addIconToContainer} from 'core/loadingicon';\n\nlet watching = false;\n\n/**\n * Ensure that a table is a dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Bool}\n */\nconst checkTableIsDynamic = tableRoot => {\n    if (!tableRoot) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    if (!tableRoot.matches(Selectors.main.region)) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    return true;\n};\n\n/**\n * Get the filterset data from a known dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Object}\n */\nconst getFiltersetFromTable = tableRoot => {\n    return JSON.parse(tableRoot.dataset.tableFilters);\n};\n\n/**\n * Update the specified table based on its current values.\n *\n * @param {HTMLElement} tableRoot\n * @param {Bool} resetContent\n * @returns {Promise}\n */\nexport const refreshTableContent = (tableRoot, resetContent = false) => {\n    const filterset = getFiltersetFromTable(tableRoot);\n    addIconToContainer(tableRoot);\n\n    return fetchTableData(\n        tableRoot.dataset.tableComponent,\n        tableRoot.dataset.tableHandler,\n        tableRoot.dataset.tableUniqueid,\n        {\n            sortData: JSON.parse(tableRoot.dataset.tableSortData),\n            joinType: filterset.jointype,\n            filters: filterset.filters,\n            firstinitial: tableRoot.dataset.tableFirstInitial,\n            lastinitial: tableRoot.dataset.tableLastInitial,\n            pageNumber: tableRoot.dataset.tablePageNumber,\n            pageSize: tableRoot.dataset.tablePageSize,\n            hiddenColumns: JSON.parse(tableRoot.dataset.tableHiddenColumns),\n        },\n        resetContent,\n    )\n    .then(data => {\n        const placeholder = document.createElement('div');\n        placeholder.innerHTML = data.html;\n        tableRoot.replaceWith(...placeholder.childNodes);\n\n        // Update the tableRoot.\n        return getTableFromId(tableRoot.dataset.tableUniqueid);\n    }).then(tableRoot => {\n        tableRoot.dispatchEvent(new CustomEvent(Events.tableContentRefreshed, {\n            bubbles: true,\n        }));\n\n        return tableRoot;\n    });\n};\n\nexport const updateTable = (tableRoot, {\n    sortBy = null,\n    sortOrder = null,\n    filters = null,\n    firstInitial = null,\n    lastInitial = null,\n    pageNumber = null,\n    pageSize = null,\n    hiddenColumns = null,\n} = {}, refreshContent = true) => {\n    checkTableIsDynamic(tableRoot);\n\n    // Update sort fields.\n    if (sortBy && sortOrder) {\n        const sortData = JSON.parse(tableRoot.dataset.tableSortData);\n        sortData.unshift({\n            sortby: sortBy,\n            sortorder: parseInt(sortOrder, 10),\n        });\n        tableRoot.dataset.tableSortData = JSON.stringify(sortData);\n    }\n\n    // Update initials.\n    if (firstInitial !== null) {\n        tableRoot.dataset.tableFirstInitial = firstInitial;\n    }\n\n    if (lastInitial !== null) {\n        tableRoot.dataset.tableLastInitial = lastInitial;\n    }\n\n    if (pageNumber !== null) {\n        tableRoot.dataset.tablePageNumber = pageNumber;\n    }\n\n    if (pageSize !== null) {\n        tableRoot.dataset.tablePageSize = pageSize;\n    }\n\n    // Update filters.\n    if (filters) {\n        tableRoot.dataset.tableFilters = JSON.stringify(filters);\n    }\n\n    // Update hidden columns.\n    if (hiddenColumns) {\n        tableRoot.dataset.tableHiddenColumns = JSON.stringify(hiddenColumns);\n    }\n\n    // Refresh.\n    if (refreshContent) {\n        return refreshTableContent(tableRoot);\n    } else {\n        return Promise.resolve(tableRoot);\n    }\n};\n\n/**\n * Get the table dataset for the specified tableRoot, ensuring that the provided table is a dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {DOMStringMap}\n */\nconst getTableData = tableRoot => {\n    checkTableIsDynamic(tableRoot);\n\n    return tableRoot.dataset;\n};\n\n/**\n * Update the specified table using the new filters.\n *\n * @param {HTMLElement} tableRoot\n * @param {Object} filters\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFilters = (tableRoot, filters, refreshContent = true) =>\n    updateTable(tableRoot, {filters}, refreshContent);\n\n/**\n * Get the filter data for the specified table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Object}\n */\nexport const getFilters = tableRoot => {\n    checkTableIsDynamic(tableRoot);\n\n    return getFiltersetFromTable(tableRoot);\n};\n\n/**\n * Update the sort order.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} sortBy\n * @param {Number} sortOrder\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setSortOrder = (tableRoot, sortBy, sortOrder, refreshContent = true) =>\n    updateTable(tableRoot, {sortBy, sortOrder}, refreshContent);\n\n/**\n * Set the page number.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} pageNumber\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setPageNumber = (tableRoot, pageNumber, refreshContent = true) =>\n    updateTable(tableRoot, {pageNumber}, refreshContent);\n\n/**\n * Get the current page number.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Number}\n */\nexport const getPageNumber = tableRoot => getTableData(tableRoot).tablePageNumber;\n\n/**\n * Set the page size.\n *\n * @param {HTMLElement} tableRoot\n * @param {Number} pageSize\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setPageSize = (tableRoot, pageSize, refreshContent = true) =>\n    updateTable(tableRoot, {pageSize, pageNumber: 0}, refreshContent);\n\n/**\n * Get the current page size.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Number}\n */\nexport const getPageSize = tableRoot => getTableData(tableRoot).tablePageSize;\n\n/**\n * Update the first initial to show.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} firstInitial\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFirstInitial = (tableRoot, firstInitial, refreshContent = true) =>\n    updateTable(tableRoot, {firstInitial}, refreshContent);\n\n/**\n * Get the current first initial filter.\n *\n * @param {HTMLElement} tableRoot\n * @returns {String}\n */\nexport const getFirstInitial = tableRoot => getTableData(tableRoot).tableFirstInitial;\n\n/**\n * Update the last initial to show.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} lastInitial\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setLastInitial = (tableRoot, lastInitial, refreshContent = true) =>\n    updateTable(tableRoot, {lastInitial}, refreshContent);\n\n/**\n * Get the current last initial filter.\n *\n * @param {HTMLElement} tableRoot\n * @returns {String}\n */\nexport const getLastInitial = tableRoot => getTableData(tableRoot).tableLastInitial;\n\n/**\n * Hide a column in the participants table.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} columnToHide\n * @param {Bool} refreshContent\n */\nexport const hideColumn = (tableRoot, columnToHide, refreshContent = true) => {\n    const hiddenColumns = JSON.parse(tableRoot.dataset.tableHiddenColumns);\n    hiddenColumns.push(columnToHide);\n\n    updateTable(tableRoot, {hiddenColumns}, refreshContent);\n};\n\n/**\n * Make a hidden column visible in the participants table.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} columnToShow\n * @param {Bool} refreshContent\n */\nexport const showColumn = (tableRoot, columnToShow, refreshContent = true) => {\n    let hiddenColumns = JSON.parse(tableRoot.dataset.tableHiddenColumns);\n    hiddenColumns = hiddenColumns.filter(columnName => columnName !== columnToShow);\n\n    updateTable(tableRoot, {hiddenColumns}, refreshContent);\n};\n\n/**\n * Reset table preferences.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Promise}\n */\nconst resetTablePreferences = tableRoot => refreshTableContent(tableRoot, true);\n\n/**\n * Set up listeners to handle table updates.\n */\nexport const init = () => {\n    if (watching) {\n        // Already watching.\n        return;\n    }\n    watching = true;\n\n    document.addEventListener('click', e => {\n        const tableRoot = e.target.closest(Selectors.main.region);\n\n        if (!tableRoot) {\n            return;\n        }\n\n        const sortableLink = e.target.closest(Selectors.table.links.sortableColumn);\n        if (sortableLink) {\n            e.preventDefault();\n\n            setSortOrder(tableRoot, sortableLink.dataset.sortby, sortableLink.dataset.sortorder);\n        }\n\n        const firstInitialLink = e.target.closest(Selectors.initialsBar.links.firstInitial);\n        if (firstInitialLink !== null) {\n            e.preventDefault();\n\n            setFirstInitial(tableRoot, firstInitialLink.dataset.initial);\n        }\n\n        const lastInitialLink = e.target.closest(Selectors.initialsBar.links.lastInitial);\n        if (lastInitialLink !== null) {\n            e.preventDefault();\n\n            setLastInitial(tableRoot, lastInitialLink.dataset.initial);\n        }\n\n        const pageItem = e.target.closest(Selectors.paginationBar.links.pageItem);\n        if (pageItem) {\n            e.preventDefault();\n\n            setPageNumber(tableRoot, pageItem.dataset.pageNumber);\n        }\n\n        const hide = e.target.closest(Selectors.table.links.hide);\n        if (hide) {\n            e.preventDefault();\n\n            hideColumn(tableRoot, hide.dataset.column);\n        }\n\n        const show = e.target.closest(Selectors.table.links.show);\n        if (show) {\n            e.preventDefault();\n\n            showColumn(tableRoot, show.dataset.column);\n        }\n\n        const resetTablePreferencesLink = e.target.closest('.resettable a');\n        if (resetTablePreferencesLink) {\n            e.preventDefault();\n\n            resetTablePreferences(tableRoot);\n        }\n    });\n};\n\n/**\n * Fetch the table via its table region id.\n *\n * @param {String} tableRegionId\n * @returns {HTMLElement}\n */\nexport const getTableFromId = tableRegionId => {\n    const tableRoot = document.querySelector(Selectors.main.fromRegionId(tableRegionId));\n\n\n    if (!tableRoot) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    return tableRoot;\n};\n\nexport {\n    Events\n};\n"],"file":"dynamic.min.js"}