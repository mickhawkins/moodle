{"version":3,"sources":["../../../src/local/user_filters/dropdowns.js"],"names":["setDropdownValue","e","uniqid","preventDefault","dropdown","target","classList","contains","dropdownType","parentNode","querySelector","id","document","getElementById","innerText","value","getAttribute","hasAttribute","optionsid","add","remove","Autocomplete","enhance","toggleVisibility","option","toggle","setOptionValue","selectedOption","valueTag","createElement","crossIcon","setAttribute","addEventListener","removeChild","appendChild","toggleFilterDropdown","dropdownList","init","querySelectorAll","forEach","filterdiv","Selectors","filters","types","text"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module containing the handlers that control user filter dropdown functionality.\n *\n * @module     core_user/local/user_filter/dropdowns\n * @package    core_user\n * @copyright  2020 Michael Hawkins <michaelh@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Autocomplete from 'core/form-autocomplete';\nimport Selectors from './selectors';\n\n// Set values for single dropdowns.\nconst setDropdownValue = (e, uniqid) => {\n    e.preventDefault();\n\n    const dropdown = e.target;\n\n    // Only handle specific items being selected.\n    if (dropdown.classList.contains('dropdown-item')) {\n        const dropdownType = dropdown.parentNode.parentNode.querySelector('button').id;\n\n        // Display the selection and set the hidden value.\n        document.getElementById(dropdownType).innerText = dropdown.innerText;\n        document.getElementById(`${dropdownType}-selected`).value = dropdown.getAttribute('data-value');\n\n        // Filter type dropdowns need to display the filter options.\n        if (dropdown.hasAttribute(\"data-filter-options-id\")) {\n            const optionsid = dropdown.getAttribute(\"data-filter-options-id\");\n\n            document.getElementById(optionsid).classList.add('d-inline-block');\n            document.getElementById(optionsid).classList.remove('hidden');\n\n            //TODO This should only happy if it's a select\n            Autocomplete.enhance(`#${uniqid}-filter-options-listTODO`, true, null, 'String goes here',\n                   false, true, null, true);\n        }\n    }\n};\n\n// Toggle the visibility of an option.\nconst toggleVisibility = option => {\n    option.classList.toggle('hidden');\n};\n\n// Display a selected item and remove it from the available options.\nconst setOptionValue = (e, uniqid) => {\n    const selectedOption = e.target;\n    const value = selectedOption.getAttribute('data-value');\n    let valueTag = document.createElement('span');\n    let crossIcon = document.createElement('i');\n    //TODO: Figure out if we need to store the values somewhere hidden as well, for easy sending in the web service\n\n    // Set up and display new tag for chosen value.\n    valueTag.setAttribute('data-value', value);\n    valueTag.classList.add('d-inline-block', 'bg-dark', 'text-white', 'rounded', 'font-weight-bold', 'px-1');\n    valueTag.innerText = selectedOption.innerText;\n    crossIcon.classList.add('icon', 'fa', 'fa-times', 'pl-2', 'mr-0');\n\n    // Handle cross removing tag and re-adding option to filter dropdown.\n    crossIcon.addEventListener('click', function() {\n        toggleVisibility(selectedOption);\n        valueTag.parentNode.removeChild(valueTag);\n    });\n\n    valueTag.appendChild(crossIcon);\n    document.getElementById(`${uniqid}-filter-options-set`).appendChild(valueTag);\n\n    toggleVisibility(selectedOption);\n};\n\n// Display the dropdown for filter options.\nconst toggleFilterDropdown = (e, uniqid) => {\n    const dropdownList = e.target.parentNode.querySelector('ul');\n\n    //TODO: This is the start of selecting the filter type, where it shows a dropdown when selected,\n            //there's also the case of the value being selected on the next dropdown, which adds the\n            //little removable tag bits. Need to see if they can be differentiated (maybe a data- tag) that\n        //allows generic code here to set one of two different event listeners, depending which type it is.\n    dropdownList.addEventListener('click', function(e) {setOptionValue(e, uniqid);});\n\n    dropdownList.classList.remove('hidden');\n};\n\n// Initialise the dropdowns in a participants filter row.\nexport const init = uniqid => {\n    // Set listener on each filter dropdown menu.\n    document.querySelectorAll('.dropdown-menu.user-filter-select').forEach((dropdown) => {\n        dropdown.addEventListener('click', function(e) {setDropdownValue(e, uniqid);});\n    });\n\n    // Add listeners for 'type or select' filter options type.\n    const filterdiv = document.getElementById(`${uniqid}-filter-options`);\n\n    filterdiv.querySelector(Selectors.filters.types.text).addEventListener('focus', function(e) {toggleFilterDropdown(e, uniqid);});\n    filterdiv.querySelector('span').addEventListener('click', toggleFilterDropdown);\n};\n"],"file":"dropdowns.min.js"}