{"version":3,"sources":["../../../src/local/user_filters/dropdowns.js"],"names":["setDropdownValue","e","uniqid","preventDefault","optionSelected","target","classList","contains","dropdownButton","parentNode","querySelector","selectedValue","getAttribute","innerText","setAttribute","document","getElementById","Selectors","filters","row","clear","remove","hasAttribute","insertEnhanced","filterType","selectString","filterset","uniqidSelector","filtersetUniqid","uniqidAttr","baseFilterDropdown","dropdown","base","filterRow","id","clearRow","rowFilterDropdown","cloneNode","enhanced","removeFilterTypeInput","insertBefore","Autocomplete","enhance","enhancedSelector","enhancedDropdown","filterSelect","enhancedUniqueId","removeChild","init","querySelectorAll","forEach","addEventListener"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module containing the handlers that control user filter dropdown functionality.\n *\n * @module     core_user/local/user_filter/dropdowns\n * @package    core_user\n * @copyright  2020 Michael Hawkins <michaelh@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Autocomplete from 'core/form-autocomplete';\nimport {get_string as getString} from 'core/str';\nimport Selectors from './selectors';\n\n// Set values for single dropdowns.\nconst setDropdownValue = (e, uniqid) => {\n    e.preventDefault();\n\n    const optionSelected = e.target;\n\n    // Only handle specific items being selected.\n    if (optionSelected.classList.contains('dropdown-item')) {\n        const dropdownButton = optionSelected.parentNode.parentNode.querySelector('button');\n        //const previouslySet = dropdownButton.getAttribute('data-option-selected');\n        const selectedValue = optionSelected.getAttribute('data-value');\n\n        // Display the selection and set the hidden value.\n        dropdownButton.innerText = optionSelected.innerText;\n        dropdownButton.setAttribute('data-option-selected', selectedValue);\n\n        // Enable the 'clear' button for the filter row, if the dropdown changes from default.\n        if (dropdownButton.getAttribute('data-option-selected') !== dropdownButton.getAttribute('data-default-selected')) {\n            document.getElementById(Selectors.filters.row.clear(uniqid)).classList.remove('disabled');\n        }\n\n        // Filter type enhanced dropdowns need to display the filter options.\n        if (optionSelected.hasAttribute(\"data-filter-type\") &&\n                optionSelected.getAttribute(\"data-filter-type\") === 'enhanceddropdown') {\n\n                insertEnhanced(uniqid, selectedValue);\n        }\n    }\n};\n\n// Insert enhanced dropdown for selected filter type.\nconst insertEnhanced = async(uniqid, filterType) => {\n    const selectString = await getString('typeorselect', 'core');\n    const filterset = document.querySelector(Selectors.filterset.uniqidSelector);\n    const filtersetUniqid = filterset.getAttribute(Selectors.filterset.uniqidAttr);\n    const baseFilterDropdown = document.getElementById(Selectors.filters.dropdown.base(`${filtersetUniqid}-${filterType}`));\n    const filterRow = document.getElementById(Selectors.filters.row.id(uniqid));\n    const clearRow = document.getElementById(Selectors.filters.row.clear(uniqid));\n    const rowFilterDropdown = baseFilterDropdown.cloneNode(true);\n    rowFilterDropdown.id = Selectors.filters.dropdown.enhanced(uniqid);\n\n    removeFilterTypeInput(uniqid);\n\n    filterRow.insertBefore(rowFilterDropdown, clearRow);\n    Autocomplete.enhance(Selectors.filters.dropdown.enhancedSelector(uniqid), false, null,\n            selectString, false, true, null, false, true, 'right');\n};\n\n// Handle removing existing filter type input when switching filter types.\nconst removeFilterTypeInput = uniqid => {\n    const filterRow = document.getElementById(Selectors.filters.row.id(uniqid));\n    const enhancedDropdown = filterRow.querySelector('div [data-autocomplete-uniqueid]');\n\n    if (enhancedDropdown) {\n        const filterSelect = filterRow.querySelector(`[id=\"${Selectors.filters.dropdown.enhanced(uniqid)}\"]`);\n        const enhancedUniqueId = enhancedDropdown.getAttribute('data-autocomplete-uniqueid');\n\n        filterSelect.parentNode.removeChild(filterSelect);\n        Autocomplete.remove(Selectors.filters.dropdown.enhanced(uniqid), enhancedUniqueId);\n    }\n};\n\n// Initialise the dropdowns in a participants filter row.\nexport const init = uniqid => {\n    // Set listener on each filter dropdown menu.\n    document.querySelectorAll('.dropdown-menu.user-filter-select').forEach((dropdown) => {\n        dropdown.addEventListener('click', function(e) {\n            setDropdownValue(e, uniqid);\n        });\n    });\n};\n"],"file":"dropdowns.min.js"}